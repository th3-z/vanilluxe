#!/usr/bin/env python3

import subprocess
import os
from time import gmtime, strftime

WORLD = '/srv/minecraft-vanilluxe'
BACKUP_DIR = '/srv/www/vanilluxe-th3-z-xyz/server'
BACKUP_MAX_QUANTITY = 15
OWNER="www-data:sysadmin"

TAR_FLAGS = '--exclude=\'plugins/dynmap\' --exclude=\'cache\' -czvf'


def find_backups(path):
    backups = [os.path.join(path, f) for f in os.listdir(path)]
    backups.sort(key=lambda f: os.path.getmtime(f), reverse=True)
    
    for backup in backups:
        yield backup


def run():
    if not os.path.exists(BACKUP_DIR):
        subprocess.call("mkdir -p {}".format(BACKUP_DIR), shell=True)

    script_path = os.path.abspath(__file__)
    script_location = os.path.dirname(script_path)

    backup_filename = \
        WORLD.replace('/', '_') \
        + strftime("_%Y-%m-%d_%H-%M", gmtime()) \
        + ".tar.gz"
    backup_path = os.path.join(BACKUP_DIR, backup_filename)
        
    tar_command = "tar {} \"{}\" \"{}\"".format(
        TAR_FLAGS, backup_path, WORLD
    )

    print("Backing up {}...".format(WORLD))
    tar_command = "cd {}; {} > /dev/null 2>&1".format(script_location, tar_command)
    print(tar_command)
    subprocess.call(tar_command, shell=True)

    chown_command = "chown -R {} {} > /dev/null 2>&1".format(OWNER, BACKUP_DIR)
    subprocess.call(chown_command, shell=True)

    link_name = \
        WORLD.replace('/', '_') \
        + "_latest.tar.gz"
    link_path = os.path.join(BACKUP_DIR, link_name)
    ln_command = "ln -sfn \"{}\" {} > /dev/null 2>&1".format(backup_path, link_path)
    subprocess.call(ln_command, shell=True)

    for idx, backup in enumerate(find_backups(BACKUP_DIR)):
        if idx > BACKUP_MAX_QUANTITY - 1:
            os.remove(backup)
        

if __name__ == "__main__":
    run()


